<?xml version="1.0" encoding="UTF-8"?>
<testng-results retried="1" ignored="1" total="7" passed="5" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-08-05T17:33:21 ICT" name="Suite" finished-at="2024-08-05T17:34:22 ICT" duration-ms="61344">
    <groups>
      <group name="Purchase">
        <method signature="basemain.submitOrder(java.util.HashMap)[pri:0, instance:test.test.basemain@5e7cd6cc]" name="submitOrder" class="test.test.basemain"/>
      </group> <!-- Purchase -->
      <group name="error">
        <method signature="errorValidate.loginerrorValidation()[pri:0, instance:test.test.errorValidate@10289886]" name="loginerrorValidation" class="test.test.errorValidate"/>
      </group> <!-- error -->
    </groups>
    <test started-at="2024-08-05T17:33:21 ICT" name="error" finished-at="2024-08-05T17:34:01 ICT" duration-ms="39984">
      <class name="test.test.errorValidate">
        <test-method is-config="true" signature="lauchApplication()[pri:0, instance:test.test.errorValidate@10289886]" started-at="2024-08-05T17:33:21 ICT" name="lauchApplication" finished-at="2024-08-05T17:33:26 ICT" duration-ms="5093" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lauchApplication -->
        <test-method retried="true" signature="loginerrorValidation()[pri:0, instance:test.test.errorValidate@10289886]" started-at="2024-08-05T17:33:26 ICT" name="loginerrorValidation" finished-at="2024-08-05T17:33:27 ICT" duration-ms="843" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [] but found [Incorrect email or password.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [] but found [Incorrect email or password.]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at test.test.errorValidate.loginerrorValidation(errorValidate.java:33)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginerrorValidation -->
        <test-method is-config="true" signature="lauchApplication()[pri:0, instance:test.test.errorValidate@10289886]" started-at="2024-08-05T17:33:27 ICT" name="lauchApplication" finished-at="2024-08-05T17:33:31 ICT" duration-ms="4466" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lauchApplication -->
        <test-method signature="loginerrorValidation()[pri:0, instance:test.test.errorValidate@10289886]" started-at="2024-08-05T17:33:31 ICT" name="loginerrorValidation" finished-at="2024-08-05T17:33:32 ICT" duration-ms="929" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginerrorValidation -->
        <test-method is-config="true" signature="lauchApplication()[pri:0, instance:test.test.errorValidate@10289886]" started-at="2024-08-05T17:33:32 ICT" name="lauchApplication" finished-at="2024-08-05T17:33:37 ICT" duration-ms="4172" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lauchApplication -->
        <test-method signature="productValidation()[pri:0, instance:test.test.errorValidate@10289886]" started-at="2024-08-05T17:33:37 ICT" name="productValidation" finished-at="2024-08-05T17:34:01 ICT" duration-ms="24379" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- productValidation -->
      </class> <!-- test.test.errorValidate -->
    </test> <!-- error -->
    <test started-at="2024-08-05T17:33:21 ICT" name="base" finished-at="2024-08-05T17:34:22 ICT" duration-ms="61344">
      <class name="test.test.basemain">
        <test-method is-config="true" signature="lauchApplication()[pri:0, instance:test.test.basemain@5e7cd6cc]" started-at="2024-08-05T17:33:21 ICT" name="lauchApplication" finished-at="2024-08-05T17:33:26 ICT" duration-ms="4881" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lauchApplication -->
        <test-method signature="submitOrder(java.util.HashMap)[pri:0, instance:test.test.basemain@5e7cd6cc]" started-at="2024-08-05T17:33:26 ICT" name="submitOrder" data-provider="getData" finished-at="2024-08-05T17:33:43 ICT" duration-ms="17133" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{pass=Thuhoai12@, nameProduct=ZARA COAT 3, email=h@hoai.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrder -->
        <test-method is-config="true" signature="lauchApplication()[pri:0, instance:test.test.basemain@5e7cd6cc]" started-at="2024-08-05T17:33:43 ICT" name="lauchApplication" finished-at="2024-08-05T17:33:52 ICT" duration-ms="8785" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lauchApplication -->
        <test-method signature="submitOrder(java.util.HashMap)[pri:0, instance:test.test.basemain@5e7cd6cc]" started-at="2024-08-05T17:33:52 ICT" name="submitOrder" data-provider="getData" finished-at="2024-08-05T17:34:15 ICT" duration-ms="23197" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{pass=Thuhoai12, nameProduct=ADIDAS ORIGINAL, email=hoai@hoai.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrder -->
        <test-method is-config="true" signature="lauchApplication()[pri:0, instance:test.test.basemain@5e7cd6cc]" started-at="2024-08-05T17:34:15 ICT" name="lauchApplication" finished-at="2024-08-05T17:34:20 ICT" duration-ms="5158" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lauchApplication -->
        <test-method signature="historyOrder()[pri:0, instance:test.test.basemain@5e7cd6cc]" started-at="2024-08-05T17:34:20 ICT" name="historyOrder" finished-at="2024-08-05T17:34:22 ICT" depends-on-methods="test.test.basemain.submitOrder" duration-ms="1892" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- historyOrder -->
      </class> <!-- test.test.basemain -->
    </test> <!-- base -->
  </suite> <!-- Suite -->
</testng-results>
